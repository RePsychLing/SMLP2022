---
title: "Laura Raveling: Conversation Gaps"
subtitle: "RePsychLing in SMLP2022"
author: "Reinhold Kliegl"
date: "2022-08-25 (last revised: `r format(Sys.time())`)"
format: 
  html:
    embed-resources: true
    toc: true
    toc-depth: 2
    code-fold: false
    number-sections: true
    fig-width: 8
    fig-height: 6
editor_options: 
  chunk_output_type: console
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(arrow)
library(tidyverse)
library(easystats)
library(summarytools)
library(lme4)
```

# Questions

1. What exactly is singularity and how do i prevent it? 
2. qa2: If the Person is nested within the Dyad, and the head gestures are nested within the Person, is the structure of random effects defined accurately that way? 
3. How to specify the relative covariance factor? 

# Data Description 

The data is a randomly sampled subset of variables of a conversation experiment. The experimental data consists of video recordings of conversations taking place between two participants (N Participants = 14, N Dyads = 7). The conversation is analysed with an event-related coding approach. Each time a question-answer sequence occurs, gestural interactions and turn gaps (time interval between question and answer) are annotated. The Hypothesis is that turn gap durations vary along with the type of head gestures. If there is a significant main effect, the second assumption is that head shakes go along with longer turn gap durations than head nods or head tilts. The types of head gestures are listed below the data summary and basic model specification. 

# Design 

```{r load data from githup, echo=TRUE}
gh.link <- "https://raw.githubusercontent.com/lraveling/smlp/main/smlp_data.txt"
df.lme <- read.delim(gh.link, sep = " ", header = TRUE, stringsAsFactors = TRUE)
#View(df.lme)
summary(df.lme)
stview(dfSummary(df.lme))
```


# Boxplot of gap duration (y)  over head gestures (x)

**head gestures (14, 3 missing in data)

* lt = left turn (-)
* rt = right turn (-)
* lti = left tilt 
* rti = right tilt 
* uti = upward tilt (-)
* dti = downward tilt 
* fne = forward neck extension
* bne = backward neck extension
* udti = upward-downward tilt 
* duti = downward-upward tilt 
* lrs = left-right shake 
* rsl = right-left shake 
* uds = upward-downward shake 
* dus = downward-upward shake

```{r plot dependent variable, echo=TRUE}
plot(df.lme$head.sample,df.lme$g.dur)
```

# Linear Mixed Models

RK: I changed the LMM formulas to Bates's default specification

+ adding `REML=FALSE`
+ adding  `control=lmerControl(calc.derivs=FALSE)`
+ suppress output of correlations of fixed effects
+ to be done: contrasts for head.sample (max=10) to test hypotheses

## Original LMMs

```{r basic model specifications}
base <- lmer(g.dur ~ head.sample + (1 | head.sample), data = df.lme,
             REML=FALSE, control=lmerControl(calc.derivs=FALSE))
print(summary(base),corr=FALSE)

qa1 <- lmer(g.dur ~ head.sample + (head.sample | dyad.sample), data = df.lme,
             REML=FALSE, control=lmerControl(calc.derivs=FALSE))
print(summary(qa1),corr=FALSE)

qa2 <- lmer(g.dur ~ head.sample + (id.a | head.sample) + (dyad.sample | id.a), data = df.lme,
             REML=FALSE, control=lmerControl(calc.derivs=FALSE))
print(summary(qa2), corr=FALSE)
```

The random-effect structure shows that these models are not supported by the data. In this case the singular fit is linked to the specification of the random factor(s) (aka: grouping variables). 

# Alternative specification

## Design

+ There are 7 dyads. This is a random factor with a marginally low number of levels. The number is small enough that you may consider also modeling them as levels of a fixed factor.
+ There are 14 subjects nested pairwise in the 7 dyads. They are coded as `A` and `B` witihin `dyad.sample` 1 to 7.  We provide them with unique labels: `A1`, `B1` .. `A7`, `B7`.
+ Each subject asks and answers questions, but there is a dependency and we cannot use the gap duration twice. I propose to carry out two separate analyses. They should yield the fixed-effect results but possibly with differences in the random-effect structure, but we will see:
    1. Question perspective: Random factor `Subj` is taken from the `id.q` variable
    2. Answer perspective:  Random factor  `Subj`  is taken from the `id.a` variable
+ `answer.t `  (nonverbal vs speech) is included with an effect contrast as within-dyad and within-subject factor.  
+ `head.sample` effects are tested with two _a priori_ special contrasts that also estimate GM in intercept.
    1. head shakes (lrs, rls, uds, dus) > head nods (fne, bne)
    2. head shakes (lrs, rls, uds, dus) > head tilts (lti, rti, dti, udti, duti)
+ `head.sample` is specified as a fixed within-dyad and within-subject factor

## Restructure / save data

I will also convert variable names to my personal style.

```{r}
dat <- 
  df.lme |> 
  as_tibble() |> 
  rename(Gesture=head.sample, Dyad=dyad.sample, Answer=answer.t, gdur=g.dur, SubjA=id.a, SubjQ=id.q ) |> 
  mutate(SubjA = interaction(SubjA, Dyad, sep=""), 
         SubjQ = interaction(SubjQ, Dyad, sep=""),
         Dyad = factor(paste0("D", str_pad(Dyad, width = 1, side = "left", pad = "0")))) |> 
  select(Dyad, SubjQ, SubjA, Answer, Gesture, gdur)

MASS::boxcox(gdur ~ 1 + Dyad + SubjA + Answer, data=dat) # looks good.
  
write_feather(dat,  "./data/Raveling_ConversationGap.arrow")
saveRDS(dat, file = "./data/Raveling_ConversationGap.rds")
```

## Hyptheses contrasts for `Gesture`

The following is actually an orthogonal set of contrasts. More on this at the SMLP2022.

```{r}
#dat$Gesture <- factor(dat$Gesture, levels=c("fne", "bne", 
#                                            "lti", "rti", "dti", "udti", "duti",
#                                            "lrs", "rls", "uds", "dus" ))

library(hypr)

gstrContr <- 
  contr.hypothesis((fne+bne)/2 ~ (lrs+rls+uds+dus)/4,
                   (lti+rti+dti+udti+duti)/5 ~ (lrs+rls+uds+dus)/4,
                   (uds+dus)/2 ~ (lrs+rls)/2,
                   (lti+rti)/2 ~ (udti+duti)/2,
                    dti ~ (lti+rti+udti+duti)/4,
                    lrs ~ rls,
                    uds ~ dus,                
                    fne ~ bne,
                    lti ~ rti,
                    udti ~ duti)

contrasts(dat$Gesture) <- gstrContr
contrasts(dat$Answer) <- contr.sum(2)

mm <- model.matrix(~  1 + Gesture*Answer, data=dat)
s_n     <- mm[,2]   # shake - nod
s_t     <- mm[,3]   # shake - tilt
lrs_uds <- mm[,4]   # left-right vs. up-down shake
udt_lrt <- mm[,5]   # up-down vs. left-rght tilt
t_dt    <- mm[,6]   # tilt vs. downward tilt
```

## LM check of contrast specification

```{r}
summary(lm1 <- lm(gdur ~ 1 +  s_n + s_t + lrs_uds + udt_lrt + t_dt, data=dat))
summary(lm2 <- lm(gdur ~ 1 + (s_n + s_t + lrs_uds + udt_lrt + t_dt)*Answer, data=dat))
anova(lm1, lm2)
```

## GM-only LMM

**Dyad perspective**

```{r}
d_voi <- lmer(gdur ~ 1 + s_n + s_t + lrs_uds + udt_lrt + t_dt + (1 | Dyad), data=dat,
              REML=FALSE, control=lmerControl(calc.derivs=FALSE))
print(summary(d_voi), cor=FALSE)
```

No reliable variance associated with `Dyad`. Looks like these are random numbers.


**Question perspective**

```{r}
q_voi <- lmer(gdur ~ 1 + s_n + s_t + lrs_uds + udt_lrt + t_dt + (1 | SubjQ), data=dat,
              REML=FALSE, control=lmerControl(calc.derivs=FALSE))
print(summary(q_voi), cor=FALSE)
```

No reliable variance associated with `SubjQ`. Looks like these are random numbers.

**Answer perspective**

```{r}
a_voi <- lmer(gdur ~ 1 + s_n + s_t + lrs_uds + udt_lrt + t_dt + (1 | SubjA), data=dat,
              REML=FALSE, control=lmerControl(calc.derivs=FALSE))
print(summary(a_voi), cor=FALSE)
```

No reliable variance associated with `SubjA`. Looks like these are random numbers.

I assume that Dyad and Subject ids are actually random. However, in principle, it could also be that we don't have enough observations in the cells of the experimental design.

```{r}
ctable(dat$Dyad, dat$Gesture, prop="n")
ctable(dat$SubjQ, dat$Gesture, prop="n")
```

These numbers are small, but in principle we should get somewhere. However, this is also a nice example, to demonstrate how we can simplify the design. So let's carry on.

# Second Attempt

## Collapse factor levels

Let's collapse Gesture cells according to the top-contrast categories. 

```{r}
dat$Gest2 <-  
  fct_collapse(dat$Gesture, lrs = c("lrs", "rls"),
                            uds = c("uds", "dus"),
                            lrt = c("lti", "rti"),
                            udt = c("udti", "duti", "dti"),
                            nod = c("bne", "fne")) 

dat$Gest2 <- factor(dat$Gest2, 
                       levels=c("lrs", "lrt", "nod", "uds", "udt"))

ctable(dat$Dyad,dat$Gest2, prop="n")
ctable(dat$SubjQ, dat$Gest2, prop="n")
```

## Contrasts

```{r}
gstrContr2 <- 
  contr.hypothesis( nod        ~ (uds+lrs)/2,
                   (udt+lrt)/2 ~ (uds+lrs)/2,
                    uds ~ lrs,
                    lrt ~ udt)

contrasts(dat$Gest2) <- gstrContr2
contrasts(dat$Answer) <- contr.sum(2)

mm <- model.matrix(~  1 + Gest2, data=dat)
dat$c1 <- mm[,2]   # shake - nod
dat$c2 <- mm[,3]   # shake - tilt
dat$c3 <- mm[,4]   # left-right vs. up-down shake
dat$c4 <- mm[,5]   # up-down vs. left-rght tilt
```

## LM check of contrast specification

We can also use the factor itself. Compare!

```{r}
summary(lm3 <- lm(gdur ~ 1 +  c1 + c2 + c3 + c4, data=dat))
summary(lm3a <- lm(gdur ~ 1 + Gest2, data=dat))

anova(lm3, lm3a)
```

**Dyad perspective**

```{r}
d_voi <- lmer(gdur ~ 1 + Gest2 + (1 | Dyad), data=dat,
              REML=FALSE, control=lmerControl(calc.derivs=FALSE))
print(summary(d_voi), cor=FALSE)
```

**Question perspective**

```{r}
q_voi <- lmer(gdur ~ 1 + Gest2 +  (1 | SubjQ), data=dat,
              REML=FALSE, control=lmerControl(calc.derivs=FALSE))
print(summary(q_voi), cor=FALSE)
```

**Answer perspective**

```{r}
a_voi <- lmer(gdur ~ 1 + Gest2 + (1 | SubjA), data=dat,
              REML=FALSE, control=lmerControl(calc.derivs=FALSE))
print(summary(a_voi), corr=FALSE)
```


No reliable variance associated with `Dyad`, `SubjQ`, and `SubA`.  It still looks like these are random numbers. Julia MixedModels cannot help here either. 


# Appendix

```{r}
sessionInfo()
```


